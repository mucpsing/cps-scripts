Image	matrix\main.py	/^from PIL import Image,ImageColor$/;"	i
ImageColor	matrix\main.py	/^from PIL import Image,ImageColor$/;"	i
List	matrix\main.py	/^from typing import Union, TypeVar, List$/;"	i
Matrix	matrix\main.py	/^class Matrix(object):$/;"	c
PerspectiveTransform	matrix\main.py	/^    def PerspectiveTransform(background_xy:list, front_xy:list) -> list:$/;"	m	class:Matrix
TypeVar	matrix\main.py	/^from typing import Union, TypeVar, List$/;"	i
Union	matrix\main.py	/^from typing import Union, TypeVar, List$/;"	i
XY_OBJ	matrix\main.py	/^class XY_OBJ():$/;"	c
__init__	matrix\main.py	/^    def __init__(self, img:str, mode:str='absolute'):$/;"	m	class:Matrix
all_pamas	matrix\main.py	/^    all_pamas = sys.argv$/;"	v	class:Matrix
config	matrix\main.py	/^    def config(self, xy:dict=None, mode:str=None) -> object:$/;"	m	class:Matrix
convertXY	matrix\main.py	/^    def convertXY(self, xy:dict) -> list:$/;"	m	class:Matrix
draw	matrix\main.py	/^    def draw(self):$/;"	m	class:Matrix
np	matrix\main.py	/^        import numpy as np$/;"	i
result	matrix\main.py	/^    def result(self) -> object:$/;"	m	class:Matrix
save	matrix\main.py	/^    def save(self, output:str) -> None:$/;"	m	class:Matrix
show	matrix\main.py	/^    def show(self):$/;"	m	class:Matrix
sys	matrix\main.py	/^    import sys$/;"	i
test	matrix\main.py	/^def test(tar:str = r'.\/test\/test.png') -> None:$/;"	f
typing	matrix\main.py	/^import typing$/;"	i
xy_item	matrix\main.py	/^xy_item = List[TypeVar('xy_item', int, float)]$/;"	v
xy_type	matrix\main.py	/^xy_type = List[List[xy_item]]$/;"	v
Dfs0	mikepy\core\mikepy.py	/^from mikeio import Dfsu,Dfs0,Mesh$/;"	i
Dfsu	mikepy\core\mikepy.py	/^from mikeio import Dfsu,Dfs0,Mesh$/;"	i
Grid2D	mikepy\core\mikepy.py	/^from mikeio.spatial import Grid2D$/;"	i
Mesh	mikepy\core\mikepy.py	/^from mikeio import Dfsu,Dfs0,Mesh$/;"	i
MikeIo	mikepy\core\mikepy.py	/^class MikeIo(object):$/;"	c
TemporaryDirectory	mikepy\core\mikepy.py	/^from tempfile import TemporaryFile,TemporaryDirectory$/;"	i
TemporaryFile	mikepy\core\mikepy.py	/^from tempfile import TemporaryFile,TemporaryDirectory$/;"	i
__init__	mikepy\core\mikepy.py	/^    def __init__(self):$/;"	m	class:MikeIo
__len__	mikepy\core\mikepy.py	/^    def __len__(self):$/;"	m	class:MikeIo	file:
__str__	mikepy\core\mikepy.py	/^    def __str__(self):$/;"	m	class:MikeIo	file:
check_data	mikepy\core\mikepy.py	/^    def check_data(self, data, fix=True, tip=True):$/;"	m	class:MikeIo
clean	mikepy\core\mikepy.py	/^    def clean(self):$/;"	m	class:MikeIo
copy2	mikepy\core\mikepy.py	/^from shutil import copy2$/;"	i
create_tmp_file	mikepy\core\mikepy.py	/^    def create_tmp_file(self, filename):$/;"	m	class:MikeIo
get_dfsu_data	mikepy\core\mikepy.py	/^    def get_dfsu_data(self, item, setp):$/;"	m	class:MikeIo
get_dfsu_direction	mikepy\core\mikepy.py	/^    def get_dfsu_direction(self, setp):$/;"	m	class:MikeIo
get_dfsu_speed	mikepy\core\mikepy.py	/^    def get_dfsu_speed(self, setp):$/;"	m	class:MikeIo
get_mesh_data	mikepy\core\mikepy.py	/^    def get_mesh_data(self, dfs):$/;"	m	class:MikeIo
io	mikepy\core\mikepy.py	/^import time, os, io$/;"	i
matplotlib	mikepy\core\mikepy.py	/^import matplotlib.pyplot as plt$/;"	i
md5	mikepy\core\mikepy.py	/^from hashlib import md5$/;"	i
np	mikepy\core\mikepy.py	/^import numpy as np$/;"	i
os	mikepy\core\mikepy.py	/^import time, os, io$/;"	i
pd	mikepy\core\mikepy.py	/^import pandas as pd$/;"	i
plt	mikepy\core\mikepy.py	/^import matplotlib.pyplot as plt$/;"	i
read	mikepy\core\mikepy.py	/^    def read(self, filename, item="", title="", setp=-1):$/;"	m	class:MikeIo
save	mikepy\core\mikepy.py	/^    def save(self, filename='.\/output.xls'):$/;"	m	class:MikeIo
save_excel	mikepy\core\mikepy.py	/^    def save_excel(self, filename):$/;"	m	class:MikeIo
sub	mikepy\core\mikepy.py	/^    def sub(self, target1, target2, title=""):$/;"	m	class:MikeIo
time	mikepy\core\mikepy.py	/^import time, os, io$/;"	i
M	mikepy\main.py	/^M=MikeIo()$/;"	v
M	mikepy\main.py	/^M=None$/;"	v
MikeIo	mikepy\main.py	/^from core.mikepy import MikeIo$/;"	i
Path	mikepy\main.py	/^from pathlib import Path$/;"	i
main	mikepy\main.py	/^def main(d=r'.\/'):$/;"	f
os	mikepy\main.py	/^import os$/;"	i
test	mikepy\main.py	/^def test(tar = r'.\/data'):$/;"	f
start	noteBooks.bat	/^:start-notebook$/;"	l
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
